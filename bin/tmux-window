#!/bin/bash

# should be sourced in to be used

error()
{
    echo "$me: [$(date)] ERROR - $*"
    exit 1
}

message()
{
    delay=${1:-1}; shift
    echo "$me: [$(date) ]: $*"
    sleep $delay
}

# check if TMUX has the window, if it does then we just switch to it
# otherwise a new window is create - note that this is done on window name
# so if you have name/command not being a unique mapping this doesn't
# work and I don't care
create_window_if_missing()
{
    local window_name="${1}"
    local target="${2}"
    local session=${target/:*/}
    local command="${3}"

    $TMUXC $TMUX_SOCKET select-window -t${session}:${window_name} 2>/dev/null || {
# no such window so create a new one
        message 2 Create window $window_name in $target
	$TMUXC $TMUX_SOCKET new-window -d -t $target -n $window_name "$command"
        (
            sleep 5
            $TMUXC $TMUX_SOCKET select-window -t${session}:${window_name} 2>/dev/null
        ) &
    }
}

# name
# name target
# name target commmand
# if you want to specify command, but not target, then you will have to have
# $2=""
function tmux_window()
{
    local target command name
    case $# in
	1)
	    ;;
	2)
	    target="$2"
	    ;;
	3)
	    target="$2"
	    command="$3"
	    ;;
	*)
	    echo "$0: expected 1-3 args, got $#" >&2;
	    return
	    ;;
    esac
    name="$1"

    [ -z "$1" ] && {
	echo 'ERROR: empty window name ' >&2
	return 1
    }
    : ${target:=$($TMUXC $TMUX_SOCKET list-session -F "#{session_name}"):}

    : ${TMUXC:=tmux}
    #: ${TMUXC:=/home/users/aking/bin/tmux}

    # pass in args, make sure the correct quoting occurs...
    create_window_if_missing "$1" "$target" "${command:-${SHELL}}"
}
