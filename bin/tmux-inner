#!/bin/bash 

# tmux-inner $session
# - session is a mnemonic for what sort of thing to run:
#   @host - run a tmux on the remote server, this is not a single windo
#	    but a full session
#   support - spawn a shell and a "man" window on id:9
#   compile - connect to the "useful" compile hosts, one in each window
#	    lapis, obsidian, hive (also runs one shell locally)
#
# designed to be run inside of a newly created tmux -L outer window

[ -z "$TMUX" ] && { echo Not in tmux, expect to be inside tmux; exit 1; }
[ -z "$1" ] && { echo No name specified, exit time; exit 1; }

. $(dirname $0)/tmux-window
unset SERVER session

session=${1//./-}

: ${TMUXC:="$HOME/bin/tmux"}
[[ -x $TMUXC ]] || TMUXC=$HOME/bin/tmux
# exported because tmux_window will have a peek
export TMUXC
export TMUX_SOCKET="-L default"

# figure out if we are logging onto a remote server to do stuff

case $session in
    @*)
	# remove the @ to get the server to connect to
	SERVER=${1:1}
        session=${session/-facebook-com}
        sleep 2; echo attempt attach
	exec mosh -6 $SERVER $TMUXC -- $TMUX_SOCKET new -ADs $session
	;;
esac

# We might be trying to start tmux now, so TMUX must be unset
unset TMUX

# if we don't have a remote server, then try and attach as we did above
if [[ -z $SERVER ]]; then
    if $TMUXC $TMUX_SOCKET has-session -t =$session; then
        exec $TMUXC $TMUX_SOCKET attach-session -t =$session
    else
        $TMUXC $TMUX_SOCKET new-session -s "$session"
    fi
    message 2 Create new tmux session $session
    $TMUXC $TMUX_SOCKET ls
else
    echo SERVER set $SERVER
fi

# if we have a specific tmux configuration for this session
# we add to the args
TMUX_CONF=$HOME/.tmux.$session
[ -f $TMUX_CONF ] && TMUXC="$TMUXC -f $TMUX_CONF"

# what do we start in this inner thingy
case $session in
    support)
        create_missing_tmux_window man
        ;;
esac || message 5 Background session setup failed
exec $TMUXC $TMUX_SOCKET -2 attach-session -t =$session

sleep 60
