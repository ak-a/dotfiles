#!/bin/bash
# shellcheck disable=SC2154,SC1117,SC1090
# Prompt command stuff

: "${HOSTNAME:=$(hostname)}"

# use tmux kube config
#[[ -r /home/anking/src/kube-ps1/kube-ps1.sh ]] && {
    #source /home/anking/src/kube-ps1/kube-ps1.sh
    #kubeon
#}

set_inuse() {
    local inusec
    local inusep
    if [[ $(stat -fc '%b' .) -eq 0 ]]; then
        inuse="${_uq_fg_red3} -- ${_defc}"
    else
        inusep=$(($(stat -fc '(%b-%a)*100/%b' .)))
        if [[ $inusep -gt 80 ]]; then
            inusec=${_uq_fg_red3}
        elif [[ $inusep -gt 50 ]]; then
            inusec=${_uq_fg_sandybrown}
        else
            inusec=${_uq_fg_darkgreen}
        fi
        inuse=$(printf "${inusec}%3d%%${_defc}" ${inusep})
    fi
}

print_prompt() {
    if [[ $_inuse_dir != "$PWD" ]]; then
      _inuse_dir=$PWD
      set_inuse
    fi
    tmux_prompt

    printf '%s%s: %s' ${_defc} ${_uq_fg_red3} "${_PROMPT_EXIT}"
    printf '%s %s%s %s %s' ${_defc} ${_uq_fg_red4} ${_tmux_ps} ${_shell_count} ${_uq_fg_purple}
    printf '%s%s%s ' ${_defc} ${_uq_fg_sandybrown} ${_PROMPT_CS}
    printf '%s %s %s ' $(date +T%H:%M:%S) ${inuse} ${_PROMPT_PATH}
    [[ $(type -t kube_ps1) == function ]] && printf '%s%s%s ' ${_defc} ${_uq_fg_purple} $(kube_ps1)
    printf ';'
    printf '%s%s\n' ${CLEAR_EOL} ${NO_COLOUR_UQ}
}

tmux_prompt() {
    if [[ -n $TMUX ]]; then
        _tmux_ps=$(tmux list-pane -F "#{session_name}:#{window_index}:#{pane_index}:#{pane_active}" |
                    awk -F: ' $4 == 1 { session=$1 ":" $2; pindex=$3; } 
                            END     {
                                        if (NR > 1) {
                                            printf "%s:%d", session, pindex;
                                        } else {
                                            printf session; }
                                    }')
    fi
}

# date=8, exit=1, shell_count=2
_prompt_min_length=$(( ${#_default_prompt} + 25 ))

case "$USER" in
    andrew|aka4)
        _user_colour="$_fg_darkgreen"
        ;;
    root)
        # shellcheck disable=SC2034
        _user_color="$_bg_yellow$_fg_red"
        ;;
    *)
        _user_colour="$_bg_steelblue33$_fg_cyan"
        ;;
esac

# utf-8 commented out
shopt -s nocasematch
if [[ ${LANG/-} = "EN_GB.UTF8" ]]; then
    _cross=$(printf '\342\234\227')
    _tick=$(printf '\342\234\223')
else
    _cross=$(printf '\000\xd7')
    _tick=$(printf '\000\xd8')
fi
shopt -u nocasematch


_PROMPT_EXIT_OK="${_uq_fg_green3}   ${_tick}"
_PROMPT_EXIT_BAD="${_uq_bg_red1}${_uq_fg_Khaki1}${_cross}"

_scm_prompt() {
    :
}

_scm_repo() {
    :
}

_defc="${NO_COLOUR_UQ}${_uq_bg_grey93}${_uq_fg_black}"
if [[ $SHLVL -eq 0 ]]; then
    _shell_count="${_uq_bg_black}${_uq_fg_yellow}%0${_defc}"
else
    _shell_count="${_uq_fg_black}%$((SHLVL-1))"
fi

# single line prompt, the first line is done by the timer, so we don't repeat
# for tab completion etc.
# shellcheck disable=SC2155
export PS1="${_bg_steelblue3}${_fg_white}:${NO_COLOUR} \
\$(_scm_prompt)\$(_scm_repo)\
\$_PROMPT_OOD_BASHRCS\
$_user_colour\u$NO_COLOUR\
$_fg_purple@\
$_fg_steelblue3${HOSTNAME%.facebook.com} \
$_bg_steelblue3$_fg_white;$NO_COLOUR "

function prompt_command_timer()
{
    local _exit_status=$?
    _command_duration=$((SECONDS-_PROMPT_TIMER))
    [[ $(type -t prompt_history) == function ]] && prompt_history
    _PROMPT_CS=$(printf "%02d:%02d:%02d" $((_command_duration/60/60)) $((_command_duration/60%60)) $((_command_duration%60)))
    if [ $_exit_status == 0 ]; then
        _PROMPT_EXIT=$_PROMPT_EXIT_OK$(printf "%3d" $_exit_status)
    else
        _PROMPT_EXIT=$_PROMPT_EXIT_BAD$(printf "%3d" $_exit_status)
    fi

    [[ $(type -t _bashrc_check_source_ood) == function ]] && _bashrc_check_source_ood
    if [[ ${_bashrc_ood[*]} ]]; then
        _PROMPT_OOD_BASHRCS="$_uq_fg_red3 rcood( ${_bashrc_ood[*]##*/} )$NO_COLOUR_UQ "
    else
        unset _PROMPT_OOD_BASHRCS
    fi


    # TODO - optimise for when things are the same - columns, path, exit code
#    if [ "$_LAST_PROMPT_PATH" != "$PWD$COLUMNS" ];then

	# substitue ~ for $HOME (using bash for speed)
	# have to do in two goes because Solaris bash doesn't like
	# _home_sub bit inside the _PWD
	local _home_sub=${HOME//\//\\/}
	local _PWD=${PWD/#$_home_sub/\~}

#	_LAST_PROMPT_PATH="$PWD$COLUMNS"
	local _maxpath
        # make sure we can do the ..., so hence the 3
        _maxpath=$(( COLUMNS-_prompt_min_length-3 ))
	if [ $_maxpath -lt ${#_PWD} ] ; then
            local _offset
	    _offset=${#_PWD}-_maxpath
	    _PROMPT_PATH="..."${_PWD:_offset:_maxpath}
	else
	    _PROMPT_PATH="$_PWD"
	fi
#    fi
    
    #local _dokinit
    #_dokinit="$HOME/.do-kinit-${HOSTNAME}"
    #if [ -r $_dokinit ]; then
        #local _krb5=$(cat $_dokinit)
        #kinit -c $_krb5
        #klist -s -c $_krb5 && rm -f $_dokinit
    #fi
    unset _PROMPT_TIMER

    print_prompt
    return $_exit_status
}

command_timer_start()
{
    _PROMPT_TIMER=${_PROMPT_TIMER:-$SECONDS}
    if [[ -z $DISPLAY ]]; then
        if [[ -n $DISPLAYFILE ]]; then
            source $DISPLAYFILE
        fi
    fi
    #printf "$NO_COLOUR_UQ"
}

typeset -xf prompt_command_timer command_timer_start 
export prompt_command_timer command_timer_start
export PROMPT_COMMAND=prompt_command_timer
trapadd 'command_timer_start' DEBUG

sudo()
{
    [[ -n $TMUX ]] && tmux select-pane -P bg=thistle1
    command sudo "$@"
    [[ -n $TMUX ]] && tmux select-pane -P bg=default
}

declare -xf prompt_command print_prompt
