#! /bin/bash
#
# Bash functions for tmux

tmux_if_started()   # window name, command
{
    [[ -n "$TMUX" ]] && { 
	local target
	target=$(tmux new-window -P -n $1 "$2")
	tmux set-window-option -t ${target//.*/} remain-on-exit on > /dev/null 2>&1
	return 0
    }
    $2
}

ssh()
{
    local _cwn
    local LC_ALL=C
    [[ -n $TMUX ]] && {
        _cwn=$(tmux list-w -F "#{window_active} #{window_name}" | sed -n '/^1/s/^..//p')
        tmux rename-window @${!#}
    }
    command ssh "$@"
    [[ -n $TMUX ]] && {
        tmux set-window-option automatic-rename on > /dev/null
    }
}

sssh()
{
    [ -z "$1" ] && { echo "Huh?"; echo "Perhaps you forgot where you were ssh-ing to?"; return 1; }
    tmux_if_started @${1//.*/} "ssh $1"
}

command2file()
{
# convert a command line to a filename, i.e. remove none shell filename characters (or escape as necessary)
    echo "${@:-${SHELL}}" | sed -e 's/[^A-Za-z0-9._-]/_/g'
}


# for some dm (or critical stuff) I want to log
dm()
{
    local LOGDIR=$HOME/dmlog/$(date +%Y%m%d)
    local target
    local name
    [ -d $LOGDIR ] || mkdir -p $LOGDIR
    LOGFILE=$(mktemp -p $LOGDIR $(date +%H%M%S)-XXXXXX-$(command2file $*).log)
    {
	echo "$(date): Starting '${*:-$SHELL}' on $(hostname)"
	uname -a
	echo "------------------------------------------------------------------------------" 
    } > $LOGFILE

    name=dm:${1:-$SHELL}
    [ "$1" = "ssh" ] && name="dm@${2}"
    # remove some common cruft
    name=${name/secserv-/}
    name=${name/.ficc.gs.com/}
    target=$(tmux new-window -P -n ${name} "$*")
    tmux set-window-option -t ${target//.*/} remain-on-exit on > /dev/null 2>&1
    tmux pipe-pane -o -t ${target} "exec cat >> $LOGFILE"
}

ww() {
    tmux split-window -d -l 80 -h\; split-window -d -l 20\;  rename-window "${@:-work}"
    tmux_prompt
}
