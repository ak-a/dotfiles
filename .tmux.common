# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.

set -g default-terminal "screen-256color"
set -g terminal-overrides "*88col*:colors=88,*256col*:colors=256,*col*:colors=256"
set-option -g history-limit 10000

### Unbind existing tmux key bindings (except 0-9).
unbind '"'
unbind '#'
unbind &
unbind ,
unbind -
unbind :
unbind =
unbind ?
unbind [
unbind '\'
unbind ]
unbind c
unbind d
unbind l
unbind n
unbind o
unbind p
unbind r
unbind s
unbind t
unbind w
unbind x

unbind Up
unbind Down
unbind M-Up
unbind M-Down
unbind C-Up
unbind C-Down

unbind C-b

# Make sure we can have two sessions not causing size issues:
setw -g aggressive-resize on

### Bind appropriate commands similar to screen.
#removebuf = 

#clear C 

#lockscreen ^X x 
bind ^X lock-server
bind x lock-server

#reset Z 
bind Z send-keys -R

#colon :
bind : command-prompt

#log H 

# screen ^C c 
bind ^C new-window
bind c new-window

# copy ^[ [ 
bind ^[ copy-mode
bind [ copy-mode
bind Up   select-pane -U
bind Down select-pane -D

# login L 

# select '
#bind "'" select-prompt

# detach ^D d
bind d detach

# meta a 
bind a send-prefix

# silence _ 

# digraph ^V 

# monitor M 

# split S

# displays * 
bind * list-clients

# next ^@ ^N sp n 
bind ^@ next-window
bind ^N next-window
bind " " next-window
bind n next-window

# suspend ^Z z 

# dumptermcap .

# number N 

# time ^T t
 
# fit F

# only Q

# title A
bind A command-prompt "rename-window %%"

# flow ^F f
 
# other ^A
bind ^A last-window

# vbell ^G 

# focus ^I 

# pow_break B 

# version v 
bind v server-info

# hardcopy h

# pow_detach D

# width W 

# help ? 
bind ? list-keys

# prev ^H ^P p ^? 
bind ^H previous-window
bind ^P previous-window
bind p previous-window
#XXX bind ^? previous-window

# windows ^W w 
bind ^W list-windows
bind w list-windows

# history { }

# quit \ 
bind \ kill-server

# wrap ^R r

# info i 

# readbuf < 

# writebuf > 

# kill K k 
bind K kill-pane
#bind k kill-pane

# redisplay ^L l 
bind ^L refresh-client
bind l refresh-client

# xoff ^S s 

# lastmsg ^M m 

# remove X 

# xon ^Q q

# select -

# paste ] ^]
bind ] paste-buffer
bind ^] paste-buffer

# split -v |
bind | split-window
bind ^\ split-window

# :kB: focus up
#bind Tab down-pane
#bind BTab up-pane

# " windowlist -b
bind '"' choose-window

#set-window-option -g mode-bg colour255
#set-window-option -g mode-fg colour16
#set-window-option -g mode-bg colour186	    # light brown
#set-window-option -g mode-fg colour21	    # blue

# pane bindings
bind    Up     select-pane -U
bind    Down   select-pane -D
bind -r M-Up   resize-pane -U 5
bind -r M-Down resize-pane -D 5
bind -r C-Up   resize-pane -U
bind -r C-Up   resize-pane -D
#
# Vim style stuff
#bind-key J resize-pane -D 5
#bind-key K resize-pane -U 5
#bind-key H resize-pane -L 5
#bind-key L resize-pane -R 5
bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# moving panes...
bind-key @ command-prompt -p "create pane from:"  "join-pane -s ':%%'"
unbind-key "'"
bind-key "'" command-prompt -p "send pane to:"  "break-pane -s ':%%'"

set -sg escape-time 0

set -g status-right "#S [#I:#P] -- "

